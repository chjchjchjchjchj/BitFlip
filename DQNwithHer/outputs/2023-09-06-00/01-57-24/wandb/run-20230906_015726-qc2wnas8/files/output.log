/root/miniconda3/envs/ling/lib/python3.9/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
  0%|                                                                                             | 0/30000 [00:00<?, ?it/s]/root/BitFlip/DQNwithHer/DQNwithHER.py:102: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /opt/conda/conda-bld/pytorch_1682343997789/work/torch/csrc/utils/tensor_new.cpp:245.)
  state = torch.tensor([state], dtype=torch.float32).to(self.device)
win_rate=[0.0]
epsilon_array=[0.9]
log_episodes=[0]











  2%|█▎                                                                                 | 492/30000 [00:24<24:38, 19.96it/s]
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/01-57-24/checkpoint/q_net.pth
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/01-57-24/checkpoint/target_q_net.pth
win_rate=[0.0, 0.022]
epsilon_array=[0.9, 0.7863600000005172]













  3%|██▋                                                                               | 1000/30000 [00:51<30:19, 15.94it/s]
win_rate=[0.0, 0.022, 0.006]
epsilon_array=[0.9, 0.7863600000005172, 0.6698400000010475]













  5%|████                                                                              | 1481/30000 [01:17<24:32, 19.37it/s]
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/01-57-24/checkpoint/q_net.pth
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/01-57-24/checkpoint/target_q_net.pth
win_rate=[0.0, 0.022, 0.006, 0.01]
epsilon_array=[0.9, 0.7863600000005172, 0.6698400000010475, 0.5557800000015666]













  7%|█████▍                                                                            | 1974/30000 [01:42<22:38, 20.63it/s]
win_rate=[0.0, 0.022, 0.006, 0.01, 0.006]
epsilon_array=[0.9, 0.7863600000005172, 0.6698400000010475, 0.5557800000015666, 0.44282000000176325]




  7%|█████▉                                                                            | 2168/30000 [01:52<23:59, 19.33it/s]
Traceback (most recent call last):
  File "/root/BitFlip/DQNwithHer/main.py", line 191, in <module>
    main()
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/root/BitFlip/DQNwithHer/main.py", line 123, in main
    agent.learn(transition_dict)
  File "/root/BitFlip/DQNwithHer/DQNwithHER.py", line 120, in learn
    goals = torch.tensor(transition_dict['goals'], dtype=torch.float32).to(self.device)
KeyboardInterrupt