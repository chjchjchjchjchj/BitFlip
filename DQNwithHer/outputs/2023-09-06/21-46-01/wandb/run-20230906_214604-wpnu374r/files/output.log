/root/miniconda3/envs/ling/lib/python3.9/site-packages/gym/logger.py:30: UserWarning: [33mWARN: Box bound precision lowered by casting to float32
  warnings.warn(colorize('%s: %s'%('WARN', msg % args), 'yellow'))
  0%|                                                                                             | 0/30000 [00:00<?, ?it/s]/root/BitFlip/DQNwithHer/DQNwithHER.py:103: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at /opt/conda/conda-bld/pytorch_1682343997789/work/torch/csrc/utils/tensor_new.cpp:245.)
  state = torch.tensor([state], dtype=torch.float32).to(self.device)
  0%|                                                                                    | 36/30000 [00:01<12:31, 39.85it/s]
win_rate=[0.0]
epsilon_array=[0.9]



  2%|█▎                                                                                 | 495/30000 [00:07<07:07, 69.00it/s]
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/21-46-01/checkpoint/q_net.pth
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/21-46-01/checkpoint/target_q_net.pth
win_rate=[0.0, 0.32]
epsilon_array=[0.9, 0.8718500000001281]



  3%|██▋                                                                                | 983/30000 [00:13<05:43, 84.45it/s]
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/21-46-01/checkpoint/q_net.pth
Saving checkpoint at /root/BitFlip/DQNwithHer/outputs/2023-09-06/21-46-01/checkpoint/target_q_net.pth
win_rate=[0.0, 0.32, 0.334]
epsilon_array=[0.9, 0.8718500000001281, 0.8432100000002585]



  5%|████▏                                                                             | 1538/30000 [00:20<06:15, 75.81it/s]
Traceback (most recent call last):
  File "/root/BitFlip/DQNwithHer/main.py", line 181, in <module>
    main()
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/_internal/hydra.py", line 119, in run
    ret = run_job(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/root/BitFlip/DQNwithHer/main.py", line 147, in main
    agent.learn(transition_dict)
  File "/root/BitFlip/DQNwithHer/DQNwithHER.py", line 134, in learn
    dqn_loss.backward()
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/root/miniconda3/envs/ling/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
KeyboardInterrupt
win_rate=[0.0, 0.32, 0.334, 0.326]
epsilon_array=[0.9, 0.8718500000001281, 0.8432100000002585, 0.8141700000003906]
log_episodes=[0, 500, 1000, 1500]